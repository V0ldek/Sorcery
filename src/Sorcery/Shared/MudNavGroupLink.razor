<div class="mud-nav-group">
    <MudNavLink Href="@Href" Match=@NavLinkMatch.Prefix Icon="@Icons.Filled.School" IconColor="@IconColor">
        <MudGrid Justify="Justify.SpaceBetween">
            <MudItem>@Title</MudItem>
            <MudItem>
                <MudToggleIconButton @bind-Toggled="Expanded" 
                    Icon="@CollapsedIcon" ToggledIcon="@ExpandedIcon" Variant="Variant.Text" 
                    Size="Size.Small" ToggledSize="Size.Small"/>
            </MudItem>
        </MudGrid>
    </MudNavLink>
    <MudCollapse Expanded="@Expanded" Class="mud-navgroup-collapse">
        <MudNavMenu>
            @ChildContent
        </MudNavMenu>
    </MudCollapse>
</div>

@code {
    [Parameter]
    public bool Expanded { get; set; }

    [Parameter]
    public string? Icon { get; set; }

    [Parameter]
    public Color IconColor { get; set; } = Color.Default;

    [Parameter]
    [EditorRequired]
    public string Href { get; set; } = null!;

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public NavLinkMatch Match { get; set; }

    [Parameter]
    public string CollapsedIcon { get; set; } = @Icons.Filled.ArrowDropDown;

    [Parameter]
    public string ExpandedIcon { get; set; } = @Icons.Filled.ArrowDropUp;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    protected void ExpandedToggle()
    {
        Expanded = !Expanded;
    }
}
